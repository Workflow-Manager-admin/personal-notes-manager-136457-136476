{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing notes in a Flask web application, including listing, creating, retrieving, updating, and deleting notes, with JWT-based authentication.", "external_files": ["../models", "../schemas"], "external_methods": ["jwt_required", "get_jwt_identity", "abort"], "published": ["note_blp"], "classes": [{"name": "NotesList", "description": "Handles listing, searching, and creating notes for authenticated users."}, {"name": "NotesDetail", "description": "Handles retrieve, update, and delete operations for individual notes."}], "methods": [{"name": "get(self, note_id)", "description": "Retrieves a list of notes with optional search and pagination for the authenticated user.", "scope": "NotesDetail", "scopeKind": "class"}, {"name": "post(self, note_data)", "description": "Creates a new note for the authenticated user.", "scope": "NotesList", "scopeKind": "class"}, {"name": "get(self, query_params)", "description": "Retrieves a specific note by ID if owned by the user.", "scope": "NotesList", "scopeKind": "class"}, {"name": "put(self, note_data, note_id)", "description": "Updates the title and/or content of an existing note if owned by the user.", "scope": "NotesDetail", "scopeKind": "class"}, {"name": "delete(self, note_id)", "description": "Deletes a note if owned by the user.", "scope": "NotesDetail", "scopeKind": "class"}], "calls": ["Note.query.filter_by", "Note.query.order_by", "Note.query.filter", "db.session.add", "db.session.commit", "db.session.delete"], "search-terms": ["Notes API", "note CRUD endpoints", "JWT protected notes", "Flask-Smorest notes", "notes search and pagination"], "state": 2, "file_id": 10, "knowledge_revision": 25, "git_revision": "29522b13f76866a1790d2fa6f6eff0949215d989", "revision_history": [{"22": ""}, {"25": "29522b13f76866a1790d2fa6f6eff0949215d989"}], "ctags": [{"_type": "tag", "name": "NotesDetail", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^class NotesDetail(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotesList", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^class NotesList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def delete(self, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, note_id)", "scope": "NotesDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def get(self, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, note_id)", "scope": "NotesDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def get(self, query_params):$/", "language": "Python", "kind": "member", "signature": "(self, query_params)", "scope": "NotesList", "scopeKind": "class"}, {"_type": "tag", "name": "note_blp", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^note_blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def post(self, note_data):$/", "language": "Python", "kind": "member", "signature": "(self, note_data)", "scope": "NotesList", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def put(self, note_data, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, note_data, note_id)", "scope": "NotesDetail", "scopeKind": "class"}], "hash": "1fb9dcd35e1346d5a9b550bac201367a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/app/routes/note.py", "fields": [{"name": "note_blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}]}