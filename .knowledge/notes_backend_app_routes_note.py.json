{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing notes, including listing, creating, retrieving, updating, and deleting notes, using Flask and related extensions.", "external_files": ["flask.views", "flask_smorest", "flask_jwt_extended", "sqlalchemy", "../models", "../schemas"], "external_methods": ["flask.views.MethodView", "flask_smorest.Blueprint", "flask_smorest.abort", "flask_jwt_extended.jwt_required", "flask_jwt_extended.get_jwt_identity", "sqlalchemy.or_", "Note.query.filter_by", "Note.query.order_by", "Note.query.filter", "Note.query.first", "db.session.add", "db.session.commit", "db.session.delete"], "published": ["note_blp"], "classes": [{"name": "NotesList", "description": "Handles listing and creation of notes for the authenticated user."}, {"name": "NotesDetail", "description": "Handles retrieval, update, and deletion of a specific note by ID for the authenticated user."}], "methods": [{"name": "get(self, note_id)", "description": "Returns a list of notes filtered by optional search parameters such as title or content, with pagination.", "scope": "NotesDetail", "scopeKind": "class"}, {"name": "post(self, note_data)", "description": "Creates a new note for the authenticated user.", "scope": "NotesList", "scopeKind": "class"}, {"name": "get (NotesDetail)", "description": "Retrieves a single note by ID if it belongs to the authenticated user."}, {"name": "put(self, note_data, note_id)", "description": "Updates an existing note (title/content) if it belongs to the authenticated user.", "scope": "NotesDetail", "scopeKind": "class"}, {"name": "delete(self, note_id)", "description": "Deletes a note if it belongs to the authenticated user.", "scope": "NotesDetail", "scopeKind": "class"}, {"name": "get(self, query_params)", "scope": "NotesList", "scopeKind": "class", "description": "unavailable"}], "calls": ["get_jwt_identity()", "Note.query.filter_by", "Note.query.order_by", "Note.query.filter", "Note.query.first", "db.session.add", "db.session.commit", "db.session.delete"], "search-terms": ["Notes API endpoint", "Flask Note routes", "Notes management", "Note CRUD Flask", "JWT protected notes"], "state": 2, "file_id": 10, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesDetail", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^class NotesDetail(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotesList", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^class NotesList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def delete(self, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, note_id)", "scope": "NotesDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def get(self, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, note_id)", "scope": "NotesDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def get(self, query_params):$/", "language": "Python", "kind": "member", "signature": "(self, query_params)", "scope": "NotesList", "scopeKind": "class"}, {"_type": "tag", "name": "note_blp", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^note_blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def post(self, note_data):$/", "language": "Python", "kind": "member", "signature": "(self, note_data)", "scope": "NotesList", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-136457-136476/notes_backend/app/routes/note.py", "pattern": "/^    def put(self, note_data, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, note_data, note_id)", "scope": "NotesDetail", "scopeKind": "class"}], "hash": "20b5e15147f97ee1f9b90b59a3e9c065", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/app/routes/note.py", "fields": [{"name": "note_blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"22": ""}]}